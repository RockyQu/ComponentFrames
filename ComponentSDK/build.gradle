apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        // 指定room.schemaLocation 生成的文件路径
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), "room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_FLAG", "true"
            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "DEBUG_FLAG", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    allprojects {
        repositories {
            jcenter()
            maven { url "https://jitpack.io" }
            maven { url 'http://dl.bintray.com/dev-fingerlinks/maven' }
            mavenCentral()
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    // 引入基础模块 Github → https://github.com/RockyQu/MVPFrames
    api 'me.frame:MVPFrames:3.0.0'

    // 引入路由框架
    api(rootProject.ext.dependencies["arouter"]) {
        exclude module: 'legacy-support-v4'
        exclude module: 'annotation'
    }
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    // 分包
    api rootProject.ext.dependencies["multidex"]

    // DB
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
}